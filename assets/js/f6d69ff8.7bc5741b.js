(self.webpackChunktypegraphql_prisma_website=self.webpackChunktypegraphql_prisma_website||[]).push([[463],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,h=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2264:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i={title:"Introduction",sidebar_position:1},s="Introduction",p={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction",description:"Let's discover TypeGraphQL Prisma in less than 3 minutes.",source:"@site/../docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",editUrl:"https://github.com/MichalLytek/typegraphql-prisma/edit/main/docs/../docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1},sidebar:"docs",next:{title:"Installation",permalink:"/docs/basics/installation"}},c=[{value:"What it is?",id:"what-it-is",children:[]},{value:"Getting Started",id:"getting-started",children:[]}],l={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Let's discover ",(0,o.kt)("strong",{parentName:"p"},"TypeGraphQL Prisma in less than 3 minutes"),"."),(0,o.kt)("h2",{id:"what-it-is"},"What it is?"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/typegraphql-prisma"},(0,o.kt)("inlineCode",{parentName:"a"},"typegraphql-prisma")," package")," provides a ",(0,o.kt)("a",{parentName:"p",href:"https://typegraphql.com"},"TypeGraphQL")," integration with Prisma."),(0,o.kt)("p",null,"It generates the type classes and CRUD resolvers based on the Prisma schema, so you can execute complex queries or mutations that corresponds to the Prisma actions, without having to write any code for that."),(0,o.kt)("h2",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"To make use of the prisma integration, first you need to add a new generator to the ",(0,o.kt)("inlineCode",{parentName:"p"},"schema.prisma")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-prisma"},'generator typegraphql {\n  provider = "typegraphql-prisma"\n}\n')),(0,o.kt)("p",null,"Then, after running ",(0,o.kt)("inlineCode",{parentName:"p"},"prisma generate")," you can import the generated resolvers classes and use them to build your GraphQL schema:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { resolvers } from "@generated/type-graphql";\n\nconst schema = await buildSchema({\n  resolvers,\n  validate: false,\n});\n')),(0,o.kt)("p",null,"When you expose that schema over the HTTP, following the ",(0,o.kt)("a",{parentName:"p",href:"https://typegraphql.com/docs/bootstrap.html#create-an-http-graphql-endpoint"},"bootstrap guide"),", you will be able to execute a complex query, that talks with the real database, in just a few minutes!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},'query GetSomeUsers {\n  users(where: { email: { contains: "prisma" } }, orderBy: { name: desc }) {\n    id\n    name\n    email\n    posts(take: 10, orderBy: { updatedAt: desc }) {\n      published\n      title\n      content\n    }\n  }\n}\n')),(0,o.kt)("p",null,"Sounds really easy and quick to setup, doesn't it? \ud83d\ude09"))}u.isMDXComponent=!0}}]);